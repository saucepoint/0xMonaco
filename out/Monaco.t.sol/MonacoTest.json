{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGames",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "225:2897:14:-:0;;;1572:26:5;;;-1:-1:-1;;165:28:0;;;;;225:2897:14;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "225:2897:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;279:62;;;:::i;:::-;;347:2773;;;:::i;316:38:0:-;;245:64;316:38;;;;;201:42:15;189:55;;;171:74;;159:2;144:18;316:38:0;;;;;;;;1819:584:5;;;:::i;:::-;;;421:14:15;;414:22;396:41;;384:2;369:18;1819:584:5;256:187:15;165:28:0;;;;;;;;;;;;1572:26:5;;;;;;;;;279:62:14;322:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;313:6:14;:21;;;;;;;;;;;;;;;279:62::o;347:2773::-;412:6;;399:20;;385:11;;412:6;;;399:20;;;:::i;:::-;201:42:15;189:55;;;171:74;;159:2;144:18;399:20:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;460:6:14;;445:22;;385:34;;-1:-1:-1;429:13:14;;460:6;;;;;445:22;;;:::i;:::-;201:42:15;189:55;;;171:74;;159:2;144:18;445:22:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;508:6:14;;493:22;;429:38;;-1:-1:-1;477:13:14;;508:6;;;;;493:22;;;:::i;:::-;201:42:15;189:55;;;171:74;;159:2;144:18;493:22:14;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;526:6:14;;:19;;;;;:6;189:55:15;;;526:19:14;;;171:74:15;477:38:14;;-1:-1:-1;526:6:14;;;:15;;144:18:15;;526:19:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;555:6:14;;:19;;;;;:6;189:55:15;;;555:19:14;;;171:74:15;555:6:14;;;;-1:-1:-1;555:15:14;;-1:-1:-1;144:18:15;;555:19:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;584:6:14;;:19;;;;;:6;189:55:15;;;584:19:14;;;171:74:15;584:6:14;;;;-1:-1:-1;584:15:14;;-1:-1:-1;144:18:15;;584:19:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;755:24:14;;;;;201:42:15;189:55;;755:24:14;;;171:74:15;245:64:0;;-1:-1:-1;719:12:14;;-1:-1:-1;245:64:0;;755:11:14;;144:18:15;;755:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;732:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;719:97;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;862:24:14;;;;;201:42:15;189:55;;862:24:14;;;171:74:15;245:64:0;;-1:-1:-1;826:12:14;;-1:-1:-1;245:64:0;;862:11:14;;144:18:15;;862:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;839:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;826:97;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;969:24:14;;;;;201:42:15;189:55;;969:24:14;;;171:74:15;245:64:0;;-1:-1:-1;933:12:14;;-1:-1:-1;245:64:0;;969:11:14;;144:18:15;;969:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;946:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;933:97;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:67:14;;;;;245:64:0;;-1:-1:-1;1040:12:14;;-1:-1:-1;1040:67:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1117:71:14;;;;;245:64:0;;-1:-1:-1;1117:12:14;;-1:-1:-1;1117:71:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:1850;1206:6;;:14;;;;;;;;1224:17;;1206:6;;;:12;;:14;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;;;;;;;;:::i;:::-;;1199:1850;;1257:6;;:14;;;;;:6;:14;;;7157:25:15;1257:6:14;;;;;:11;;7130:18:15;;1257:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1291:7;;;;;7395:2:15;7377:21;;;7434:1;7414:18;;;7407:29;7468:2;7453:18;;7193:284;1291:7:14;;;;;;;;1350:6;;:22;;;;;;;;1313:34;;1350:6;;;:20;;:22;;;;;1313:34;;1350:22;;;;;;;:6;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1313:59;;1392:9;1387:1652;1411:10;:17;1407:1;:21;1387:1652;;;1453:25;1481:10;1492:1;1481:13;;;;;;;;:::i;:::-;;;;;;;1453:41;;1518:29;1538:3;:7;;;1518:29;;;;;201:42:15;189:55;;;;171:74;;159:2;144:18;;14:237;1518:29:14;;;;;;;;1596:11;;1570:38;;;;;;9742:2:15;9724:21;;;9781:1;9761:18;;;9754:29;9819:9;9814:2;9799:18;;9792:37;9915:10;9903:23;;;;9896:4;9881:20;;9874:53;9861:3;9846:19;;9513:420;1570:38:14;;;;;;;;1631:34;1655:3;:9;;;1631:34;;;;;10167:2:15;10149:21;;;10206:1;10186:18;;;10179:29;10244:7;10239:2;10224:18;;10217:35;10338:10;10326:23;;;;10319:4;10304:20;;10297:53;10284:3;10269:19;;9938:418;1631:34:14;;;;;;;;1708:5;;;;;1688:26;;10572:21:15;;;10629:1;10609:18;;;10602:29;10667:3;10662:2;10647:18;;10640:31;10757:10;10745:23;;;10738:4;10723:20;;10716:53;1688:26:14;;;;;;;10703:3:15;1688:26:14;;;253:55:0;1810:7:14;;;1790:29;;;;;201:42:15;189:55;;;1790:29:14;;;171:74:15;245:64:0;;1733:12:14;;245:64:0;;1790:11:14;;144:18:15;;1790:29:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1767:61;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1909:6;;:14;;;;;1767:61;;245:64:0;;1889:11:14;;;1909:6;;;;:12;;:14;;;;;1767:61;;1909:14;;;;;;;:6;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1901:23;;1889:36;;;;;;;;;;;;;7157:25:15;;7145:2;7130:18;;7003:185;1889:36:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1992:11;;1980:24;;;;;11418:10:15;11406:23;;;1980:24:14;;;11388:42:15;245:64:0;;1980:11:14;;11361:18:15;;1980:24:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2071:9;;;;2059:22;;;;;11418:10:15;11406:23;;;2059:22:14;;;11388:42:15;245:64:0;;2059:11:14;;11361:18:15;;2059:22:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2148:5;;;;;2136:18;;;;;11418:10:15;11406:23;;;2136:18:14;;;11388:42:15;245:64:0;;2136:11:14;;11361:18:15;;2136::14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1850:326;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1733:461;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2345:6:14;;:14;;;;;;;;245:64:0;;-1:-1:-1;2213:12:14;;-1:-1:-1;245:64:0;;2325:11:14;;2213:12;2345:6;;;;:12;;:14;;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2337:23;;2325:36;;;;;;;;;;;;;7157:25:15;;7145:2;7130:18;;7003:185;2325:36:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2428:6;;:27;;;;;:6;:27;;;7157:25:15;245:64:0;;2416:11:14;;;2428:6;;;;:24;;7130:18:15;;2428:27:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2416:40;;;;;;;;;;;;;7157:25:15;;7145:2;7130:18;;7003:185;2416:40:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2523:6;;:22;;;;;:6;:22;;;7157:25:15;245:64:0;;2511:11:14;;;2523:6;;;;:19;;7130:18:15;;2523:22:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2511:35;;;;;;;;;;;;;7157:25:15;;7145:2;7130:18;;7003:185;2511:35:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2286:282;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2213:373;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2735:6:14;;:14;;;;;;;;245:64:0;;-1:-1:-1;2605:12:14;;-1:-1:-1;245:64:0;;2715:11:14;;2605:12;2735:6;;;;:12;;:14;;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2727:23;;2715:36;;;;;;;;;;;;;7157:25:15;;7145:2;7130:18;;7003:185;2715:36:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2818:6;;:51;;;;;245:64:0;;2806:11:14;;;2818:6;;;;:21;;:51;;269:37:0;;2818:51:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2806:64;;;;;;;;;;;;;7157:25:15;;7145:2;7130:18;;7003:185;2806:64:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2937:6;;:46;;;;;245:64:0;;2925:11:14;;;2937:6;;;;:21;;:46;;:6;;:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2925:59;;;;;;;;;;;;;7157:25:15;;7145:2;7130:18;;7003:185;2925:59:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2676:330;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2605:419;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1435:1604;1430:3;;;;;:::i;:::-;;;;1387:1652;;;;1243:1806;1199:1850;;;3098:6;;:14;;;;;;;;3064:49;;3098:6;;;:12;;:14;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3064:49;;;16082:21:15;;;16139:2;16119:18;;;16112:30;16178:17;16173:2;16158:18;;16151:45;16282:6;16270:19;;;;16263:4;16248:20;;16241:49;3064::14;;;;;16228:3:15;3064:49:14;;;375:2745;;;347:2773::o;1819:584:5:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:5;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;16475:74:15;;;2221:17:5;16565:18:15;;;16558:34;2196:43:5;;;;;;;;;16448:18:15;;;2196:43:5;;;-1:-1:-1;;1671:64:5;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:5:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;1677:184:15:-;1729:77;1726:1;1719:88;1826:4;1823:1;1816:15;1850:4;1847:1;1840:15;1866:253;1938:2;1932:9;1980:4;1968:17;;2015:18;2000:34;;2036:22;;;1997:62;1994:88;;;2062:18;;:::i;:::-;2098:2;2091:22;1866:253;:::o;2124:334::-;2195:2;2189:9;2251:2;2241:13;;2256:66;2237:86;2225:99;;2354:18;2339:34;;2375:22;;;2336:62;2333:88;;;2401:18;;:::i;:::-;2437:2;2430:22;2124:334;;-1:-1:-1;2124:334:15:o;2463:258::-;2535:1;2545:113;2559:6;2556:1;2553:13;2545:113;;;2635:11;;;2629:18;2616:11;;;2609:39;2581:2;2574:10;2545:113;;;2676:6;2673:1;2670:13;2667:48;;;2711:1;2702:6;2697:3;2693:16;2686:27;2667:48;;2463:258;;;:::o;2726:765::-;2806:6;2859:2;2847:9;2838:7;2834:23;2830:32;2827:52;;;2875:1;2872;2865:12;2827:52;2908:9;2902:16;2937:18;2978:2;2970:6;2967:14;2964:34;;;2994:1;2991;2984:12;2964:34;3032:6;3021:9;3017:22;3007:32;;3077:7;3070:4;3066:2;3062:13;3058:27;3048:55;;3099:1;3096;3089:12;3048:55;3128:2;3122:9;3150:2;3146;3143:10;3140:36;;;3156:18;;:::i;:::-;3198:112;3306:2;3237:66;3230:4;3226:2;3222:13;3218:86;3214:95;3198:112;:::i;:::-;3185:125;;3333:2;3326:5;3319:17;3373:7;3368:2;3363;3359;3355:11;3351:20;3348:33;3345:53;;;3394:1;3391;3384:12;3345:53;3407:54;3458:2;3453;3446:5;3442:14;3437:2;3433;3429:11;3407:54;:::i;:::-;-1:-1:-1;3480:5:15;2726:765;-1:-1:-1;;;;2726:765:15:o;3496:557::-;3837:7;3832:3;3825:20;3807:3;3874:6;3868:13;3890:61;3944:6;3940:1;3935:3;3931:11;3924:4;3916:6;3912:17;3890:61;:::i;:::-;4014:6;4010:1;3970:16;;;;4002:10;;;3995:26;-1:-1:-1;4045:1:15;4037:10;;3496:557;-1:-1:-1;3496:557:15:o;4058:317::-;4100:3;4138:5;4132:12;4165:6;4160:3;4153:19;4181:63;4237:6;4230:4;4225:3;4221:14;4214:4;4207:5;4203:16;4181:63;:::i;:::-;4289:2;4277:15;4294:66;4273:88;4264:98;;;;4364:4;4260:109;;4058:317;-1:-1:-1;;4058:317:15:o;4380:545::-;4630:2;4619:9;4612:21;4593:4;4656:45;4697:2;4686:9;4682:18;4674:6;4656:45;:::i;:::-;4749:9;4741:6;4737:22;4732:2;4721:9;4717:18;4710:50;4784:2;4776:6;4769:18;4820:66;4815:2;4807:6;4803:15;4796:91;4916:2;4908:6;4904:15;4896:23;;;4380:545;;;;:::o;5099:602::-;5402:2;5391:9;5384:21;5365:4;5428:49;5473:2;5462:9;5458:18;5007:2;4995:15;;5042:17;5035:4;5026:14;;5019:41;5085:2;5076:12;;4930:164;5428:49;5513:22;;;5508:2;5493:18;;;5486:50;5560:2;5545:18;;5596:66;5579:15;;;5572:91;;;;-1:-1:-1;5692:2:15;5680:15;;5099:602::o;5868:665::-;6171:2;6160:9;6153:21;6134:4;6197:44;6237:2;6226:9;6222:18;5778:2;5766:15;;5813;5806:4;5797:14;;5790:39;5854:2;5845:12;;5706:157;6197:44;6277:22;;;6272:2;6257:18;;;6250:50;6324:2;6309:18;;6360:34;6343:15;;;6336:59;;;;-1:-1:-1;6428:66:15;6423:2;6411:15;;6404:91;6524:2;6512:15;;5868:665::o;6538:184::-;6590:77;6587:1;6580:88;6687:4;6684:1;6677:15;6711:4;6708:1;6701:15;6727:271;6808:6;6861:2;6849:9;6840:7;6836:23;6832:32;6829:52;;;6877:1;6874;6867:12;6829:52;6909:9;6903:16;6948:1;6941:5;6938:12;6928:40;;6964:1;6961;6954:12;6928:40;6987:5;6727:271;-1:-1:-1;;;6727:271:15:o;7482:167::-;7560:13;;7613:10;7602:22;;7592:33;;7582:61;;7639:1;7636;7629:12;7654:1665;7775:6;7806:2;7849;7837:9;7828:7;7824:23;7820:32;7817:52;;;7865:1;7862;7855:12;7817:52;7898:9;7892:16;7927:18;7968:2;7960:6;7957:14;7954:34;;;7984:1;7981;7974:12;7954:34;8022:6;8011:9;8007:22;7997:32;;8067:7;8060:4;8056:2;8052:13;8048:27;8038:55;;8089:1;8086;8079:12;8038:55;8118:2;8112:9;8140:2;8136;8133:10;8130:36;;;8146:18;;:::i;:::-;8186:36;8218:2;8213;8210:1;8206:10;8202:19;8186:36;:::i;:::-;8256:15;;;8287:12;;;;-1:-1:-1;8338:1:15;8334:10;;;;8326:19;;8322:28;;;8362:19;;;8359:39;;;8394:1;8391;8384:12;8359:39;8418:11;;;;8438:851;8454:6;8449:3;8446:15;8438:851;;;8536:4;8530:3;8521:7;8517:17;8513:28;8510:118;;;8582:1;8611:2;8607;8600:14;8510:118;8654:22;;:::i;:::-;8703:33;8732:3;8703:33;:::i;:::-;8696:5;8689:48;8773:42;8811:2;8806:3;8802:12;8773:42;:::i;:::-;8768:2;8761:5;8757:14;8750:66;8839:2;8877:42;8915:2;8910:3;8906:12;8877:42;:::i;:::-;8861:14;;;8854:66;8943:2;8979:12;;;8973:19;9040:42;9027:56;;9015:69;;9005:167;;9126:1;9155:2;9151;9144:14;9005:167;9192:14;;;9185:31;9229:18;;8480:4;8471:14;;;;;9267:12;;;;8438:851;;;9308:5;7654:1665;-1:-1:-1;;;;;;;7654:1665:15:o;9324:184::-;9376:77;9373:1;9366:88;9473:4;9470:1;9463:15;9497:4;9494:1;9487:15;10780:276;10849:6;10902:2;10890:9;10881:7;10877:23;10873:32;10870:52;;;10918:1;10915;10908:12;10870:52;10950:9;10944:16;11000:6;10993:5;10989:18;10982:5;10979:29;10969:57;;11022:1;11019;11012:12;11441:1260;11986:3;12024:6;12018:13;12040:53;12086:6;12081:3;12074:4;12066:6;12062:17;12040:53;:::i;:::-;12124:6;12119:3;12115:16;12102:29;;12150:3;12176:2;12169:5;12162:17;12210:6;12204:13;12226:65;12282:8;12278:1;12271:5;12267:13;12260:4;12252:6;12248:17;12226:65;:::i;:::-;12354:1;12310:20;;12346:10;;;12339:22;;;12386:13;;12408:62;12386:13;12457:1;12449:10;;12442:4;12430:17;;12408:62;:::i;:::-;12530:1;12489:17;;12522:10;;;12515:22;12562:13;;12584:62;12562:13;12633:1;12625:10;;12618:4;12606:17;;12584:62;:::i;:::-;12670:17;12662:33;;;;-1:-1:-1;;;;;;11441:1260:15:o;12706:383::-;12903:2;12892:9;12885:21;12866:4;12929:45;12970:2;12959:9;12955:18;12947:6;12929:45;:::i;:::-;13022:9;13014:6;13010:22;13005:2;12994:9;12990:18;12983:50;13050:33;13076:6;13068;13050:33;:::i;:::-;13042:41;12706:383;-1:-1:-1;;;;;12706:383:15:o;13094:184::-;13164:6;13217:2;13205:9;13196:7;13192:23;13188:32;13185:52;;;13233:1;13230;13223:12;13185:52;-1:-1:-1;13256:16:15;;13094:184;-1:-1:-1;13094:184:15:o;13283:938::-;13690:3;13728:6;13722:13;13744:53;13790:6;13785:3;13778:4;13770:6;13766:17;13744:53;:::i;:::-;13828:6;13823:3;13819:16;13806:29;;13854:3;13880:2;13873:5;13866:17;13914:6;13908:13;13930:65;13986:8;13982:1;13975:5;13971:13;13964:4;13956:6;13952:17;13930:65;:::i;:::-;14058:1;14014:20;;14050:10;;;14043:22;14090:13;;14112:62;14090:13;14161:1;14153:10;;14146:4;14134:17;;14112:62;:::i;:::-;14194:17;14213:1;14190:25;;13283:938;-1:-1:-1;;;;;13283:938:15:o;14226:440::-;14476:2;14465:9;14458:21;14439:4;14502:49;14547:2;14536:9;14532:18;5007:2;4995:15;;5042:17;5035:4;5026:14;;5019:41;5085:2;5076:12;;4930:164;14502:49;14599:9;14591:6;14587:22;14582:2;14571:9;14567:18;14560:50;14627:33;14653:6;14645;14627:33;:::i;:::-;14619:41;14226:440;-1:-1:-1;;;;14226:440:15:o;14671:401::-;14819:2;14804:18;;14852:1;14841:13;;14831:201;;14888:77;14885:1;14878:88;14989:4;14986:1;14979:15;15017:4;15014:1;15007:15;14831:201;15041:25;;;14671:401;:::o;15077:435::-;15327:2;15316:9;15309:21;15290:4;15353:44;15393:2;15382:9;15378:18;5778:2;5766:15;;5813;5806:4;5797:14;;5790:39;5854:2;5845:12;;5706:157;15517:349;15556:3;15587:66;15580:5;15577:77;15574:257;;15687:77;15684:1;15677:88;15788:4;15785:1;15778:15;15816:4;15813:1;15806:15;15574:257;-1:-1:-1;15858:1:15;15847:13;;15517:349::o;16603:417::-;16800:66;16792:6;16788:79;16783:3;16776:92;16758:3;16897:6;16891:13;16913:61;16967:6;16963:1;16958:3;16954:11;16947:4;16939:6;16935:17;16913:61;:::i;:::-;16994:16;;;;17012:1;16990:24;;16603:417;-1:-1:-1;;;16603:417:15:o;17025:274::-;17154:3;17192:6;17186:13;17208:53;17254:6;17249:3;17242:4;17234:6;17230:17;17208:53;:::i;:::-;17277:16;;;;;17025:274;-1:-1:-1;;17025:274:15:o;17304:277::-;17371:6;17424:2;17412:9;17403:7;17399:23;17395:32;17392:52;;;17440:1;17437;17430:12;17392:52;17472:9;17466:16;17525:5;17518:13;17511:21;17504:5;17501:32;17491:60;;17547:1;17544;17537:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testGames()": "3a00dfb5",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "test/Monaco.t.sol",
    "id": 25287,
    "exportedSymbols": {
      "Car": [
        22763
      ],
      "ClownCar": [
        23361
      ],
      "DSTest": [
        21500
      ],
      "ExampleCar": [
        23446
      ],
      "Monaco": [
        22736
      ],
      "MonacoTest": [
        25286
      ],
      "SafeCastLib": [
        21734
      ],
      "Script": [
        235
      ],
      "StdStorage": [
        1715
      ],
      "Test": [
        1617
      ],
      "ThePackage": [
        24449
      ],
      "Vm": [
        3585
      ],
      "console": [
        11649
      ],
      "console2": [
        19713
      ],
      "stdError": [
        1687
      ],
      "stdMath": [
        2956
      ],
      "stdStorage": [
        2817
      ],
      "toWadUnsafe": [
        24461
      ],
      "unsafeDiv": [
        24934
      ],
      "unsafeWadDiv": [
        24485
      ],
      "unsafeWadMul": [
        24473
      ],
      "wadDiv": [
        24507
      ],
      "wadExp": [
        24704
      ],
      "wadLn": [
        24922
      ],
      "wadMul": [
        24496
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3091:14",
    "nodes": [
      {
        "id": 24936,
        "nodeType": "PragmaDirective",
        "src": "32:23:14",
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 24937,
        "nodeType": "ImportDirective",
        "src": "57:28:14",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25287,
        "sourceUnit": 2957,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24938,
        "nodeType": "ImportDirective",
        "src": "87:27:14",
        "absolutePath": "src/Monaco.sol",
        "file": "../src/Monaco.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25287,
        "sourceUnit": 22737,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24939,
        "nodeType": "ImportDirective",
        "src": "115:36:14",
        "absolutePath": "src/cars/ExampleCar.sol",
        "file": "../src/cars/ExampleCar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25287,
        "sourceUnit": 23447,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24940,
        "nodeType": "ImportDirective",
        "src": "152:34:14",
        "absolutePath": "src/cars/ClownCar.sol",
        "file": "../src/cars/ClownCar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25287,
        "sourceUnit": 23362,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24941,
        "nodeType": "ImportDirective",
        "src": "187:36:14",
        "absolutePath": "src/cars/ThePackage.sol",
        "file": "../src/cars/ThePackage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25287,
        "sourceUnit": 24450,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25286,
        "nodeType": "ContractDefinition",
        "src": "225:2897:14",
        "nodes": [
          {
            "id": 24946,
            "nodeType": "VariableDeclaration",
            "src": "259:13:14",
            "constant": false,
            "mutability": "mutable",
            "name": "monaco",
            "nameLocation": "266:6:14",
            "scope": 25286,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Monaco_$22736",
              "typeString": "contract Monaco"
            },
            "typeName": {
              "id": 24945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24944,
                "name": "Monaco",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22736,
                "src": "259:6:14"
              },
              "referencedDeclaration": 22736,
              "src": "259:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Monaco_$22736",
                "typeString": "contract Monaco"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 24957,
            "nodeType": "FunctionDefinition",
            "src": "279:62:14",
            "body": {
              "id": 24956,
              "nodeType": "Block",
              "src": "303:38:14",
              "statements": [
                {
                  "expression": {
                    "id": 24954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24949,
                      "name": "monaco",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24946,
                      "src": "313:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Monaco_$22736",
                        "typeString": "contract Monaco"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 24952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "322:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Monaco_$22736_$",
                          "typeString": "function () returns (contract Monaco)"
                        },
                        "typeName": {
                          "id": 24951,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 24950,
                            "name": "Monaco",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22736,
                            "src": "326:6:14"
                          },
                          "referencedDeclaration": 22736,
                          "src": "326:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Monaco_$22736",
                            "typeString": "contract Monaco"
                          }
                        }
                      },
                      "id": 24953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "322:12:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Monaco_$22736",
                        "typeString": "contract Monaco"
                      }
                    },
                    "src": "313:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Monaco_$22736",
                      "typeString": "contract Monaco"
                    }
                  },
                  "id": 24955,
                  "nodeType": "ExpressionStatement",
                  "src": "313:21:14"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "288:5:14",
            "parameters": {
              "id": 24947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "293:2:14"
            },
            "returnParameters": {
              "id": 24948,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "303:0:14"
            },
            "scope": 25286,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25285,
            "nodeType": "FunctionDefinition",
            "src": "347:2773:14",
            "body": {
              "id": 25284,
              "nodeType": "Block",
              "src": "375:2745:14",
              "statements": [
                {
                  "assignments": [
                    24962
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24962,
                      "mutability": "mutable",
                      "name": "w1",
                      "nameLocation": "394:2:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 25284,
                      "src": "385:11:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ClownCar_$23361",
                        "typeString": "contract ClownCar"
                      },
                      "typeName": {
                        "id": 24961,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24960,
                          "name": "ClownCar",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23361,
                          "src": "385:8:14"
                        },
                        "referencedDeclaration": 23361,
                        "src": "385:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClownCar_$23361",
                          "typeString": "contract ClownCar"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24968,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24966,
                        "name": "monaco",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24946,
                        "src": "412:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Monaco_$22736",
                          "typeString": "contract Monaco"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Monaco_$22736",
                          "typeString": "contract Monaco"
                        }
                      ],
                      "id": 24965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "399:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Monaco_$22736_$returns$_t_contract$_ClownCar_$23361_$",
                        "typeString": "function (contract Monaco) returns (contract ClownCar)"
                      },
                      "typeName": {
                        "id": 24964,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24963,
                          "name": "ClownCar",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23361,
                          "src": "403:8:14"
                        },
                        "referencedDeclaration": 23361,
                        "src": "403:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClownCar_$23361",
                          "typeString": "contract ClownCar"
                        }
                      }
                    },
                    "id": 24967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:20:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClownCar_$23361",
                      "typeString": "contract ClownCar"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "385:34:14"
                },
                {
                  "assignments": [
                    24971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24971,
                      "mutability": "mutable",
                      "name": "w2",
                      "nameLocation": "440:2:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 25284,
                      "src": "429:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ThePackage_$24449",
                        "typeString": "contract ThePackage"
                      },
                      "typeName": {
                        "id": 24970,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24969,
                          "name": "ThePackage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24449,
                          "src": "429:10:14"
                        },
                        "referencedDeclaration": 24449,
                        "src": "429:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ThePackage_$24449",
                          "typeString": "contract ThePackage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24977,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24975,
                        "name": "monaco",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24946,
                        "src": "460:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Monaco_$22736",
                          "typeString": "contract Monaco"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Monaco_$22736",
                          "typeString": "contract Monaco"
                        }
                      ],
                      "id": 24974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "445:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Monaco_$22736_$returns$_t_contract$_ThePackage_$24449_$",
                        "typeString": "function (contract Monaco) returns (contract ThePackage)"
                      },
                      "typeName": {
                        "id": 24973,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24972,
                          "name": "ThePackage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24449,
                          "src": "449:10:14"
                        },
                        "referencedDeclaration": 24449,
                        "src": "449:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ThePackage_$24449",
                          "typeString": "contract ThePackage"
                        }
                      }
                    },
                    "id": 24976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:22:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ThePackage_$24449",
                      "typeString": "contract ThePackage"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "429:38:14"
                },
                {
                  "assignments": [
                    24980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24980,
                      "mutability": "mutable",
                      "name": "w3",
                      "nameLocation": "488:2:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 25284,
                      "src": "477:13:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ExampleCar_$23446",
                        "typeString": "contract ExampleCar"
                      },
                      "typeName": {
                        "id": 24979,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24978,
                          "name": "ExampleCar",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23446,
                          "src": "477:10:14"
                        },
                        "referencedDeclaration": 23446,
                        "src": "477:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExampleCar_$23446",
                          "typeString": "contract ExampleCar"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24986,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24984,
                        "name": "monaco",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24946,
                        "src": "508:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Monaco_$22736",
                          "typeString": "contract Monaco"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Monaco_$22736",
                          "typeString": "contract Monaco"
                        }
                      ],
                      "id": 24983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "493:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Monaco_$22736_$returns$_t_contract$_ExampleCar_$23446_$",
                        "typeString": "function (contract Monaco) returns (contract ExampleCar)"
                      },
                      "typeName": {
                        "id": 24982,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 24981,
                          "name": "ExampleCar",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 23446,
                          "src": "497:10:14"
                        },
                        "referencedDeclaration": 23446,
                        "src": "497:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExampleCar_$23446",
                          "typeString": "contract ExampleCar"
                        }
                      }
                    },
                    "id": 24985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "493:22:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ExampleCar_$23446",
                      "typeString": "contract ExampleCar"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "477:38:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24990,
                        "name": "w1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24962,
                        "src": "542:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ClownCar_$23361",
                          "typeString": "contract ClownCar"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ClownCar_$23361",
                          "typeString": "contract ClownCar"
                        }
                      ],
                      "expression": {
                        "id": 24987,
                        "name": "monaco",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24946,
                        "src": "526:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Monaco_$22736",
                          "typeString": "contract Monaco"
                        }
                      },
                      "id": 24989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21977,
                      "src": "526:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Car_$22763_$returns$__$",
                        "typeString": "function (contract Car) external"
                      }
                    },
                    "id": 24991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "526:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24992,
                  "nodeType": "ExpressionStatement",
                  "src": "526:19:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24996,
                        "name": "w2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24971,
                        "src": "571:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ThePackage_$24449",
                          "typeString": "contract ThePackage"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ThePackage_$24449",
                          "typeString": "contract ThePackage"
                        }
                      ],
                      "expression": {
                        "id": 24993,
                        "name": "monaco",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24946,
                        "src": "555:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Monaco_$22736",
                          "typeString": "contract Monaco"
                        }
                      },
                      "id": 24995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21977,
                      "src": "555:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Car_$22763_$returns$__$",
                        "typeString": "function (contract Car) external"
                      }
                    },
                    "id": 24997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24998,
                  "nodeType": "ExpressionStatement",
                  "src": "555:19:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25002,
                        "name": "w3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24980,
                        "src": "600:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ExampleCar_$23446",
                          "typeString": "contract ExampleCar"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ExampleCar_$23446",
                          "typeString": "contract ExampleCar"
                        }
                      ],
                      "expression": {
                        "id": 24999,
                        "name": "monaco",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24946,
                        "src": "584:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Monaco_$22736",
                          "typeString": "contract Monaco"
                        }
                      },
                      "id": 25001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "register",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21977,
                      "src": "584:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Car_$22763_$returns$__$",
                        "typeString": "function (contract Car) external"
                      }
                    },
                    "id": 25003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:19:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25004,
                  "nodeType": "ExpressionStatement",
                  "src": "584:19:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6c6f67732f",
                            "id": 25011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "746:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2f338856e61683a08c905882f6890548872ae025ed3f1d57dfd82b180e45317b",
                              "typeString": "literal_string \"logs/\""
                            },
                            "value": "logs/"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 25016,
                                    "name": "w1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24962,
                                    "src": "775:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ClownCar_$23361",
                                      "typeString": "contract ClownCar"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ClownCar_$23361",
                                      "typeString": "contract ClownCar"
                                    }
                                  ],
                                  "id": 25015,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "767:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25014,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "767:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "767:11:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 25012,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "755:2:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$3585",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 25013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3390,
                              "src": "755:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) external returns (string memory)"
                              }
                            },
                            "id": 25018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "755:24:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e637376",
                            "id": 25019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "781:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_636a2b01b9bcda1265afc9c9727af567c9013cd62d694a5f5c10b0d74742dd17",
                              "typeString": "literal_string \".csv\""
                            },
                            "value": ".csv"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2f338856e61683a08c905882f6890548872ae025ed3f1d57dfd82b180e45317b",
                              "typeString": "literal_string \"logs/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_636a2b01b9bcda1265afc9c9727af567c9013cd62d694a5f5c10b0d74742dd17",
                              "typeString": "literal_string \".csv\""
                            }
                          ],
                          "expression": {
                            "id": 25009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "732:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 25008,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "732:6:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "732:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 25020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "732:56:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "7475726e732c62616c616e63652c73706565642c790a",
                        "id": 25021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "790:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be76ddbe444e685a5eb41be2a65c1a8a777d108252f531cc099c7ed729c64f7b",
                          "typeString": "literal_string hex\"7475726e732c62616c616e63652c73706565642c790a\""
                        },
                        "value": "turns,balance,speed,y\n"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be76ddbe444e685a5eb41be2a65c1a8a777d108252f531cc099c7ed729c64f7b",
                          "typeString": "literal_string hex\"7475726e732c62616c616e63652c73706565642c790a\""
                        }
                      ],
                      "expression": {
                        "id": 25005,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "719:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3585",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "writeFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3366,
                      "src": "719:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 25022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "719:97:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25023,
                  "nodeType": "ExpressionStatement",
                  "src": "719:97:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6c6f67732f",
                            "id": 25030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "853:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2f338856e61683a08c905882f6890548872ae025ed3f1d57dfd82b180e45317b",
                              "typeString": "literal_string \"logs/\""
                            },
                            "value": "logs/"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 25035,
                                    "name": "w2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24971,
                                    "src": "882:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ThePackage_$24449",
                                      "typeString": "contract ThePackage"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ThePackage_$24449",
                                      "typeString": "contract ThePackage"
                                    }
                                  ],
                                  "id": 25034,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "874:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25033,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "874:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "874:11:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 25031,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "862:2:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$3585",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 25032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3390,
                              "src": "862:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) external returns (string memory)"
                              }
                            },
                            "id": 25037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "862:24:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e637376",
                            "id": 25038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "888:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_636a2b01b9bcda1265afc9c9727af567c9013cd62d694a5f5c10b0d74742dd17",
                              "typeString": "literal_string \".csv\""
                            },
                            "value": ".csv"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2f338856e61683a08c905882f6890548872ae025ed3f1d57dfd82b180e45317b",
                              "typeString": "literal_string \"logs/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_636a2b01b9bcda1265afc9c9727af567c9013cd62d694a5f5c10b0d74742dd17",
                              "typeString": "literal_string \".csv\""
                            }
                          ],
                          "expression": {
                            "id": 25028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "839:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 25027,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "839:6:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "839:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 25039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "839:56:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "7475726e732c62616c616e63652c73706565642c790a",
                        "id": 25040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "897:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be76ddbe444e685a5eb41be2a65c1a8a777d108252f531cc099c7ed729c64f7b",
                          "typeString": "literal_string hex\"7475726e732c62616c616e63652c73706565642c790a\""
                        },
                        "value": "turns,balance,speed,y\n"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be76ddbe444e685a5eb41be2a65c1a8a777d108252f531cc099c7ed729c64f7b",
                          "typeString": "literal_string hex\"7475726e732c62616c616e63652c73706565642c790a\""
                        }
                      ],
                      "expression": {
                        "id": 25024,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "826:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3585",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "writeFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3366,
                      "src": "826:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 25041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:97:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25042,
                  "nodeType": "ExpressionStatement",
                  "src": "826:97:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6c6f67732f",
                            "id": 25049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "960:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_2f338856e61683a08c905882f6890548872ae025ed3f1d57dfd82b180e45317b",
                              "typeString": "literal_string \"logs/\""
                            },
                            "value": "logs/"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 25054,
                                    "name": "w3",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24980,
                                    "src": "989:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ExampleCar_$23446",
                                      "typeString": "contract ExampleCar"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ExampleCar_$23446",
                                      "typeString": "contract ExampleCar"
                                    }
                                  ],
                                  "id": 25053,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "981:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 25052,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "981:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 25055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "981:11:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 25050,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30,
                                "src": "969:2:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$3585",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 25051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3390,
                              "src": "969:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (address) external returns (string memory)"
                              }
                            },
                            "id": 25056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "969:24:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e637376",
                            "id": 25057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "995:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_636a2b01b9bcda1265afc9c9727af567c9013cd62d694a5f5c10b0d74742dd17",
                              "typeString": "literal_string \".csv\""
                            },
                            "value": ".csv"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_2f338856e61683a08c905882f6890548872ae025ed3f1d57dfd82b180e45317b",
                              "typeString": "literal_string \"logs/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_636a2b01b9bcda1265afc9c9727af567c9013cd62d694a5f5c10b0d74742dd17",
                              "typeString": "literal_string \".csv\""
                            }
                          ],
                          "expression": {
                            "id": 25047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "946:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 25046,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "946:6:14",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "946:13:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 25058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "946:56:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "7475726e732c62616c616e63652c73706565642c790a",
                        "id": 25059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1004:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be76ddbe444e685a5eb41be2a65c1a8a777d108252f531cc099c7ed729c64f7b",
                          "typeString": "literal_string hex\"7475726e732c62616c616e63652c73706565642c790a\""
                        },
                        "value": "turns,balance,speed,y\n"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be76ddbe444e685a5eb41be2a65c1a8a777d108252f531cc099c7ed729c64f7b",
                          "typeString": "literal_string hex\"7475726e732c62616c616e63652c73706565642c790a\""
                        }
                      ],
                      "expression": {
                        "id": 25043,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "933:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3585",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "writeFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3366,
                      "src": "933:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 25060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:97:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25061,
                  "nodeType": "ExpressionStatement",
                  "src": "933:97:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c6f67732f7072696365732e637376",
                        "id": 25065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1053:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_286d4c15a2c0ca26810aef0e8772a4bb23b121509e60ef1f65921e061d6b9967",
                          "typeString": "literal_string \"logs/prices.csv\""
                        },
                        "value": "logs/prices.csv"
                      },
                      {
                        "hexValue": "7475726e732c616363656c6572617465436f73742c7368656c6c436f73740a",
                        "id": 25066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1072:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5480929711a1d4e0f4ad957c47c488193f3b575082506dac542510a833ed8469",
                          "typeString": "literal_string hex\"7475726e732c616363656c6572617465436f73742c7368656c6c436f73740a\""
                        },
                        "value": "turns,accelerateCost,shellCost\n"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_286d4c15a2c0ca26810aef0e8772a4bb23b121509e60ef1f65921e061d6b9967",
                          "typeString": "literal_string \"logs/prices.csv\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5480929711a1d4e0f4ad957c47c488193f3b575082506dac542510a833ed8469",
                          "typeString": "literal_string hex\"7475726e732c616363656c6572617465436f73742c7368656c6c436f73740a\""
                        }
                      ],
                      "expression": {
                        "id": 25062,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1040:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3585",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "writeFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3366,
                      "src": "1040:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 25067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1040:67:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25068,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:67:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6c6f67732f736f6c642e637376",
                        "id": 25072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1130:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_346818c44111c7c39df927fcaf23ce388fd256ed04bbceb572d173ab47eb1c2c",
                          "typeString": "literal_string \"logs/sold.csv\""
                        },
                        "value": "logs/sold.csv"
                      },
                      {
                        "hexValue": "7475726e732c616363656c657261746573426f756768742c7368656c6c73426f756768740a",
                        "id": 25073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1147:40:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04a3528ded51ff5936705d93577eb1344ba60dd237b9d969acd097f836abee41",
                          "typeString": "literal_string hex\"7475726e732c616363656c657261746573426f756768742c7368656c6c73426f756768740a\""
                        },
                        "value": "turns,acceleratesBought,shellsBought\n"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_346818c44111c7c39df927fcaf23ce388fd256ed04bbceb572d173ab47eb1c2c",
                          "typeString": "literal_string \"logs/sold.csv\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04a3528ded51ff5936705d93577eb1344ba60dd237b9d969acd097f836abee41",
                          "typeString": "literal_string hex\"7475726e732c616363656c657261746573426f756768742c7368656c6c73426f756768740a\""
                        }
                      ],
                      "expression": {
                        "id": 25069,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "1117:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3585",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "writeFile",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3366,
                      "src": "1117:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 25074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1117:71:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25075,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:71:14"
                },
                {
                  "body": {
                    "id": 25275,
                    "nodeType": "Block",
                    "src": "1243:1806:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 25086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1269:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 25083,
                              "name": "monaco",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24946,
                              "src": "1257:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Monaco_$22736",
                                "typeString": "contract Monaco"
                              }
                            },
                            "id": 25085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "play",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22184,
                            "src": "1257:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 25087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1257:14:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25088,
                        "nodeType": "ExpressionStatement",
                        "src": "1257:14:14"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 25090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1295:2:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "id": 25089,
                            "name": "log",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19719,
                            "src": "1291:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 25091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1291:7:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25092,
                        "nodeType": "EmitStatement",
                        "src": "1286:12:14"
                      },
                      {
                        "assignments": [
                          25098
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 25098,
                            "mutability": "mutable",
                            "name": "allCarData",
                            "nameLocation": "1337:10:14",
                            "nodeType": "VariableDeclaration",
                            "scope": 25275,
                            "src": "1313:34:14",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CarData_$21892_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Monaco.CarData[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 25096,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 25095,
                                  "name": "Monaco.CarData",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 21892,
                                  "src": "1313:14:14"
                                },
                                "referencedDeclaration": 21892,
                                "src": "1313:14:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CarData_$21892_storage_ptr",
                                  "typeString": "struct Monaco.CarData"
                                }
                              },
                              "id": 25097,
                              "nodeType": "ArrayTypeName",
                              "src": "1313:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CarData_$21892_storage_$dyn_storage_ptr",
                                "typeString": "struct Monaco.CarData[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 25102,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 25099,
                              "name": "monaco",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24946,
                              "src": "1350:6:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Monaco_$22736",
                                "typeString": "contract Monaco"
                              }
                            },
                            "id": 25100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAllCarData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22594,
                            "src": "1350:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_CarData_$21892_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function () view external returns (struct Monaco.CarData memory[] memory)"
                            }
                          },
                          "id": 25101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:22:14",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_CarData_$21892_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Monaco.CarData memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1313:59:14"
                      },
                      {
                        "body": {
                          "id": 25273,
                          "nodeType": "Block",
                          "src": "1435:1604:14",
                          "statements": [
                            {
                              "assignments": [
                                25118
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 25118,
                                  "mutability": "mutable",
                                  "name": "car",
                                  "nameLocation": "1475:3:14",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 25273,
                                  "src": "1453:25:14",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                    "typeString": "struct Monaco.CarData"
                                  },
                                  "typeName": {
                                    "id": 25117,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 25116,
                                      "name": "Monaco.CarData",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 21892,
                                      "src": "1453:14:14"
                                    },
                                    "referencedDeclaration": 21892,
                                    "src": "1453:14:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CarData_$21892_storage_ptr",
                                      "typeString": "struct Monaco.CarData"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 25122,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 25119,
                                  "name": "allCarData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25098,
                                  "src": "1481:10:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_CarData_$21892_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Monaco.CarData memory[] memory"
                                  }
                                },
                                "id": 25121,
                                "indexExpression": {
                                  "id": 25120,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25104,
                                  "src": "1492:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1481:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                  "typeString": "struct Monaco.CarData memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1453:41:14"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 25126,
                                          "name": "car",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 25118,
                                          "src": "1538:3:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                            "typeString": "struct Monaco.CarData memory"
                                          }
                                        },
                                        "id": 25127,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "car",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 21891,
                                        "src": "1538:7:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Car_$22763",
                                          "typeString": "contract Car"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Car_$22763",
                                          "typeString": "contract Car"
                                        }
                                      ],
                                      "id": 25125,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1530:7:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 25124,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1530:7:14",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 25128,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1530:16:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 25123,
                                  "name": "log_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19727,
                                  "src": "1518:11:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 25129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1518:29:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25130,
                              "nodeType": "EmitStatement",
                              "src": "1513:34:14"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "62616c616e6365",
                                    "id": 25132,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1585:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                                      "typeString": "literal_string \"balance\""
                                    },
                                    "value": "balance"
                                  },
                                  {
                                    "expression": {
                                      "id": 25133,
                                      "name": "car",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25118,
                                      "src": "1596:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                        "typeString": "struct Monaco.CarData memory"
                                      }
                                    },
                                    "id": 25134,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21884,
                                    "src": "1596:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                                      "typeString": "literal_string \"balance\""
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 25131,
                                  "name": "log_named_uint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19787,
                                  "src": "1570:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,uint256)"
                                  }
                                },
                                "id": 25135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1570:38:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25136,
                              "nodeType": "EmitStatement",
                              "src": "1565:43:14"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "7370656564",
                                    "id": 25138,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1646:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_1aa3a92bf48444ec6c0ba221a56ba9a0eedb5e06c28b451a0096d0683ff4fdd3",
                                      "typeString": "literal_string \"speed\""
                                    },
                                    "value": "speed"
                                  },
                                  {
                                    "expression": {
                                      "id": 25139,
                                      "name": "car",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25118,
                                      "src": "1655:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                        "typeString": "struct Monaco.CarData memory"
                                      }
                                    },
                                    "id": 25140,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "speed",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21886,
                                    "src": "1655:9:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_1aa3a92bf48444ec6c0ba221a56ba9a0eedb5e06c28b451a0096d0683ff4fdd3",
                                      "typeString": "literal_string \"speed\""
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 25137,
                                  "name": "log_named_uint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19787,
                                  "src": "1631:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,uint256)"
                                  }
                                },
                                "id": 25141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1631:34:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25142,
                              "nodeType": "EmitStatement",
                              "src": "1626:39:14"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "79",
                                    "id": 25144,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1703:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                                      "typeString": "literal_string \"y\""
                                    },
                                    "value": "y"
                                  },
                                  {
                                    "expression": {
                                      "id": 25145,
                                      "name": "car",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25118,
                                      "src": "1708:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                        "typeString": "struct Monaco.CarData memory"
                                      }
                                    },
                                    "id": 25146,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "y",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 21888,
                                    "src": "1708:5:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_83847cf31c36389df832d0d4d3df7cf28f211e3f83173e5c157bab31573d61f3",
                                      "typeString": "literal_string \"y\""
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 25143,
                                  "name": "log_named_uint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19787,
                                  "src": "1688:14:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                    "typeString": "function (string memory,uint256)"
                                  }
                                },
                                "id": 25147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1688:26:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25148,
                              "nodeType": "EmitStatement",
                              "src": "1683:31:14"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "6c6f67732f",
                                        "id": 25155,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1781:7:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_2f338856e61683a08c905882f6890548872ae025ed3f1d57dfd82b180e45317b",
                                          "typeString": "literal_string \"logs/\""
                                        },
                                        "value": "logs/"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 25160,
                                                  "name": "car",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 25118,
                                                  "src": "1810:3:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                                    "typeString": "struct Monaco.CarData memory"
                                                  }
                                                },
                                                "id": 25161,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "car",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 21891,
                                                "src": "1810:7:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Car_$22763",
                                                  "typeString": "contract Car"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_Car_$22763",
                                                  "typeString": "contract Car"
                                                }
                                              ],
                                              "id": 25159,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1802:7:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 25158,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1802:7:14",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 25162,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1802:16:14",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25156,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "1790:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25157,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3390,
                                          "src": "1790:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (address) external returns (string memory)"
                                          }
                                        },
                                        "id": 25163,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1790:29:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "2e637376",
                                        "id": 25164,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1821:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_636a2b01b9bcda1265afc9c9727af567c9013cd62d694a5f5c10b0d74742dd17",
                                          "typeString": "literal_string \".csv\""
                                        },
                                        "value": ".csv"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_2f338856e61683a08c905882f6890548872ae025ed3f1d57dfd82b180e45317b",
                                          "typeString": "literal_string \"logs/\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_636a2b01b9bcda1265afc9c9727af567c9013cd62d694a5f5c10b0d74742dd17",
                                          "typeString": "literal_string \".csv\""
                                        }
                                      ],
                                      "expression": {
                                        "id": 25153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1767:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 25152,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1767:6:14",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 25154,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "concat",
                                      "nodeType": "MemberAccess",
                                      "src": "1767:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () pure returns (string memory)"
                                      }
                                    },
                                    "id": 25165,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1767:61:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "expression": {
                                                    "id": 25173,
                                                    "name": "monaco",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 24946,
                                                    "src": "1909:6:14",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_Monaco_$22736",
                                                      "typeString": "contract Monaco"
                                                    }
                                                  },
                                                  "id": 25174,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "turns",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 21869,
                                                  "src": "1909:12:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                                    "typeString": "function () view external returns (uint16)"
                                                  }
                                                },
                                                "id": 25175,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1909:14:14",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              ],
                                              "id": 25172,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1901:7:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 25171,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1901:7:14",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 25176,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1901:23:14",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25169,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "1889:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25170,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "1889:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25177,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1889:36:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "2c",
                                        "id": 25178,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1951:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        "value": ","
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 25181,
                                              "name": "car",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25118,
                                              "src": "1992:3:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                                "typeString": "struct Monaco.CarData memory"
                                              }
                                            },
                                            "id": 25182,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balance",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 21884,
                                            "src": "1992:11:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25179,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "1980:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25180,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "1980:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25183,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1980:24:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "2c",
                                        "id": 25184,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2030:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        "value": ","
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 25187,
                                              "name": "car",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25118,
                                              "src": "2071:3:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                                "typeString": "struct Monaco.CarData memory"
                                              }
                                            },
                                            "id": 25188,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "speed",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 21886,
                                            "src": "2071:9:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25185,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "2059:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25186,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "2059:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25189,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2059:22:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "2c",
                                        "id": 25190,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2107:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        "value": ","
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "id": 25193,
                                              "name": "car",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 25118,
                                              "src": "2148:3:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                                                "typeString": "struct Monaco.CarData memory"
                                              }
                                            },
                                            "id": 25194,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "y",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 21888,
                                            "src": "2148:5:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint32",
                                              "typeString": "uint32"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25191,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "2136:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25192,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "2136:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2136:18:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 25167,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1850:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 25166,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1850:6:14",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 25168,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "concat",
                                      "nodeType": "MemberAccess",
                                      "src": "1850:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () pure returns (string memory)"
                                      }
                                    },
                                    "id": 25196,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1850:326:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 25149,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30,
                                    "src": "1733:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$3585",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 25151,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "writeLine",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3373,
                                  "src": "1733:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory,string memory) external"
                                  }
                                },
                                "id": 25197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1733:461:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25198,
                              "nodeType": "ExpressionStatement",
                              "src": "1733:461:14"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "6c6f67732f7072696365732e637376",
                                    "id": 25202,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2247:17:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_286d4c15a2c0ca26810aef0e8772a4bb23b121509e60ef1f65921e061d6b9967",
                                      "typeString": "literal_string \"logs/prices.csv\""
                                    },
                                    "value": "logs/prices.csv"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "expression": {
                                                    "id": 25210,
                                                    "name": "monaco",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 24946,
                                                    "src": "2345:6:14",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_Monaco_$22736",
                                                      "typeString": "contract Monaco"
                                                    }
                                                  },
                                                  "id": 25211,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "turns",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 21869,
                                                  "src": "2345:12:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                                    "typeString": "function () view external returns (uint16)"
                                                  }
                                                },
                                                "id": 25212,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2345:14:14",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              ],
                                              "id": 25209,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "2337:7:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 25208,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2337:7:14",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 25213,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2337:23:14",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25206,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "2325:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25207,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "2325:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2325:36:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "2c",
                                        "id": 25215,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2387:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        "value": ","
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "31",
                                                "id": 25220,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2453:1:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                }
                                              ],
                                              "expression": {
                                                "id": 25218,
                                                "name": "monaco",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 24946,
                                                "src": "2428:6:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Monaco_$22736",
                                                  "typeString": "contract Monaco"
                                                }
                                              },
                                              "id": 25219,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "getAccelerateCost",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 22435,
                                              "src": "2428:24:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256) view external returns (uint256)"
                                              }
                                            },
                                            "id": 25221,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2428:27:14",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25216,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "2416:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25217,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "2416:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25222,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2416:40:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "2c",
                                        "id": 25223,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2482:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        "value": ","
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "31",
                                                "id": 25228,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2543:1:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                }
                                              ],
                                              "expression": {
                                                "id": 25226,
                                                "name": "monaco",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 24946,
                                                "src": "2523:6:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Monaco_$22736",
                                                  "typeString": "contract Monaco"
                                                }
                                              },
                                              "id": 25227,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "getShellCost",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 22471,
                                              "src": "2523:19:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256) view external returns (uint256)"
                                              }
                                            },
                                            "id": 25229,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2523:22:14",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25224,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "2511:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25225,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "2511:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25230,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2511:35:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 25204,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2286:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 25203,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2286:6:14",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 25205,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "concat",
                                      "nodeType": "MemberAccess",
                                      "src": "2286:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () pure returns (string memory)"
                                      }
                                    },
                                    "id": 25231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2286:282:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_286d4c15a2c0ca26810aef0e8772a4bb23b121509e60ef1f65921e061d6b9967",
                                      "typeString": "literal_string \"logs/prices.csv\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 25199,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30,
                                    "src": "2213:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$3585",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 25201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "writeLine",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3373,
                                  "src": "2213:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory,string memory) external"
                                  }
                                },
                                "id": 25232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2213:373:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25233,
                              "nodeType": "ExpressionStatement",
                              "src": "2213:373:14"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "6c6f67732f736f6c642e637376",
                                    "id": 25237,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2639:15:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_346818c44111c7c39df927fcaf23ce388fd256ed04bbceb572d173ab47eb1c2c",
                                      "typeString": "literal_string \"logs/sold.csv\""
                                    },
                                    "value": "logs/sold.csv"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [],
                                                "expression": {
                                                  "argumentTypes": [],
                                                  "expression": {
                                                    "id": 25245,
                                                    "name": "monaco",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 24946,
                                                    "src": "2735:6:14",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_Monaco_$22736",
                                                      "typeString": "contract Monaco"
                                                    }
                                                  },
                                                  "id": 25246,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "turns",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 21869,
                                                  "src": "2735:12:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                                                    "typeString": "function () view external returns (uint16)"
                                                  }
                                                },
                                                "id": 25247,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2735:14:14",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              ],
                                              "id": 25244,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "2727:7:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 25243,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2727:7:14",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 25248,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2727:23:14",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25241,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "2715:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25242,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "2715:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25249,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2715:36:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "2c",
                                        "id": 25250,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2777:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        "value": ","
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "expression": {
                                                    "id": 25255,
                                                    "name": "Monaco",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 22736,
                                                    "src": "2840:6:14",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_Monaco_$22736_$",
                                                      "typeString": "type(contract Monaco)"
                                                    }
                                                  },
                                                  "id": 25256,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "ActionType",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 21877,
                                                  "src": "2840:17:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_ActionType_$21877_$",
                                                    "typeString": "type(enum Monaco.ActionType)"
                                                  }
                                                },
                                                "id": 25257,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "ACCELERATE",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 21875,
                                                "src": "2840:28:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_ActionType_$21877",
                                                  "typeString": "enum Monaco.ActionType"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_enum$_ActionType_$21877",
                                                  "typeString": "enum Monaco.ActionType"
                                                }
                                              ],
                                              "expression": {
                                                "id": 25253,
                                                "name": "monaco",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 24946,
                                                "src": "2818:6:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Monaco_$22736",
                                                  "typeString": "contract Monaco"
                                                }
                                              },
                                              "id": 25254,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "getActionsSold",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 21882,
                                              "src": "2818:21:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_enum$_ActionType_$21877_$returns$_t_uint256_$",
                                                "typeString": "function (enum Monaco.ActionType) view external returns (uint256)"
                                              }
                                            },
                                            "id": 25258,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2818:51:14",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25251,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "2806:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25252,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "2806:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25259,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2806:64:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      },
                                      {
                                        "hexValue": "2c",
                                        "id": 25260,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2896:3:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        "value": ","
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "expression": {
                                                    "id": 25265,
                                                    "name": "Monaco",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 22736,
                                                    "src": "2959:6:14",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_contract$_Monaco_$22736_$",
                                                      "typeString": "type(contract Monaco)"
                                                    }
                                                  },
                                                  "id": 25266,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "ActionType",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 21877,
                                                  "src": "2959:17:14",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_ActionType_$21877_$",
                                                    "typeString": "type(enum Monaco.ActionType)"
                                                  }
                                                },
                                                "id": 25267,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "SHELL",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 21876,
                                                "src": "2959:23:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_ActionType_$21877",
                                                  "typeString": "enum Monaco.ActionType"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_enum$_ActionType_$21877",
                                                  "typeString": "enum Monaco.ActionType"
                                                }
                                              ],
                                              "expression": {
                                                "id": 25263,
                                                "name": "monaco",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 24946,
                                                "src": "2937:6:14",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_Monaco_$22736",
                                                  "typeString": "contract Monaco"
                                                }
                                              },
                                              "id": 25264,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "getActionsSold",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 21882,
                                              "src": "2937:21:14",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_enum$_ActionType_$21877_$returns$_t_uint256_$",
                                                "typeString": "function (enum Monaco.ActionType) view external returns (uint256)"
                                              }
                                            },
                                            "id": 25268,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2937:46:14",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 25261,
                                            "name": "vm",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 30,
                                            "src": "2925:2:14",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_Vm_$3585",
                                              "typeString": "contract Vm"
                                            }
                                          },
                                          "id": 25262,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 3418,
                                          "src": "2925:11:14",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                            "typeString": "function (uint256) external returns (string memory)"
                                          }
                                        },
                                        "id": 25269,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2925:59:14",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_3e7a35b97029f9e0cf6effd71c1a7958822e9a217d3a3aec886668a7dd8231cb",
                                          "typeString": "literal_string \",\""
                                        },
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 25239,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2676:6:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 25238,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2676:6:14",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 25240,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "concat",
                                      "nodeType": "MemberAccess",
                                      "src": "2676:13:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                        "typeString": "function () pure returns (string memory)"
                                      }
                                    },
                                    "id": 25270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2676:330:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_346818c44111c7c39df927fcaf23ce388fd256ed04bbceb572d173ab47eb1c2c",
                                      "typeString": "literal_string \"logs/sold.csv\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 25234,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30,
                                    "src": "2605:2:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$3585",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 25236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "writeLine",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3373,
                                  "src": "2605:12:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory,string memory) external"
                                  }
                                },
                                "id": 25271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2605:419:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 25272,
                              "nodeType": "ExpressionStatement",
                              "src": "2605:419:14"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25107,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25104,
                            "src": "1407:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 25108,
                              "name": "allCarData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25098,
                              "src": "1411:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CarData_$21892_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Monaco.CarData memory[] memory"
                              }
                            },
                            "id": 25109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1411:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1407:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 25274,
                        "initializationExpression": {
                          "assignments": [
                            25104
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 25104,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1400:1:14",
                              "nodeType": "VariableDeclaration",
                              "scope": 25274,
                              "src": "1392:9:14",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 25103,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1392:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 25106,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 25105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1404:1:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1392:13:14"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 25112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1430:3:14",
                            "subExpression": {
                              "id": 25111,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25104,
                              "src": "1430:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 25113,
                          "nodeType": "ExpressionStatement",
                          "src": "1430:3:14"
                        },
                        "nodeType": "ForStatement",
                        "src": "1387:1652:14"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$21863",
                      "typeString": "enum Monaco.State"
                    },
                    "id": 25082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 25076,
                          "name": "monaco",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24946,
                          "src": "1206:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Monaco_$22736",
                            "typeString": "contract Monaco"
                          }
                        },
                        "id": 25077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21866,
                        "src": "1206:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_enum$_State_$21863_$",
                          "typeString": "function () view external returns (enum Monaco.State)"
                        }
                      },
                      "id": 25078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1206:14:14",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21863",
                        "typeString": "enum Monaco.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 25079,
                          "name": "Monaco",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22736,
                          "src": "1224:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Monaco_$22736_$",
                            "typeString": "type(contract Monaco)"
                          }
                        },
                        "id": 25080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "State",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21863,
                        "src": "1224:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$21863_$",
                          "typeString": "type(enum Monaco.State)"
                        }
                      },
                      "id": 25081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "DONE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21862,
                      "src": "1224:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$21863",
                        "typeString": "enum Monaco.State"
                      }
                    },
                    "src": "1206:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25276,
                  "nodeType": "WhileStatement",
                  "src": "1199:1850:14"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "4e756d626572204f66205475726e73",
                        "id": 25278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3079:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4577d3a4b3c8fe05c828e2a2e393b64f8435fc7b4d9a30714138ea74b84ca5ae",
                          "typeString": "literal_string \"Number Of Turns\""
                        },
                        "value": "Number Of Turns"
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25279,
                            "name": "monaco",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24946,
                            "src": "3098:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Monaco_$22736",
                              "typeString": "contract Monaco"
                            }
                          },
                          "id": 25280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "turns",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21869,
                          "src": "3098:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                            "typeString": "function () view external returns (uint16)"
                          }
                        },
                        "id": 25281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3098:14:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4577d3a4b3c8fe05c828e2a2e393b64f8435fc7b4d9a30714138ea74b84ca5ae",
                          "typeString": "literal_string \"Number Of Turns\""
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "id": 25277,
                      "name": "log_named_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19787,
                      "src": "3064:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 25282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:49:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25283,
                  "nodeType": "EmitStatement",
                  "src": "3059:54:14"
                }
              ]
            },
            "functionSelector": "3a00dfb5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGames",
            "nameLocation": "356:9:14",
            "parameters": {
              "id": 24958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:2:14"
            },
            "returnParameters": {
              "id": 24959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:0:14"
            },
            "scope": 25286,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24942,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1617,
              "src": "248:4:14"
            },
            "id": 24943,
            "nodeType": "InheritanceSpecifier",
            "src": "248:4:14"
          }
        ],
        "canonicalName": "MonacoTest",
        "contractDependencies": [
          22736,
          23361,
          23446,
          24449
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25286,
          1617,
          235,
          21500
        ],
        "name": "MonacoTest",
        "nameLocation": "234:10:14",
        "scope": 25287,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 14
}