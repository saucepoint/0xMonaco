{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Monaco",
          "name": "_monaco",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "balance",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "speed",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            },
            {
              "internalType": "contract Car",
              "name": "car",
              "type": "address"
            }
          ],
          "internalType": "struct Monaco.CarData[]",
          "name": "allCars",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "ourCarIndex",
          "type": "uint256"
        }
      ],
      "name": "takeYourTurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b506040516106a33803806106a383398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161060461009f6000396000818160a10152818161015e01528181610287015261034501526106046000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630c73edf414610030575b600080fd5b61004361003e3660046103cf565b610045565b005b60008383838181106100595761005961044a565b90506080020180360381019061006f9190610492565b6040517f503a6982000000000000000000000000000000000000000000000000000000008152600360048201529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063503a698290602401602060405180830381865afa1580156100fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101219190610551565b815163ffffffff161115610200576040517f361401f4000000000000000000000000000000000000000000000000000000008152600360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063361401f4906024016020604051808303816000875af11580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e09190610551565b62ffffff16816000018181516101f69190610599565b63ffffffff169052505b81158015906102515750602081015163ffffffff1684846102226001866105be565b8181106102315761023161044a565b905060800201602001602081019061024991906105d5565b63ffffffff16115b801561031157506040517f54192e41000000000000000000000000000000000000000000000000000000008152600160048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906354192e4190602401602060405180830381865afa1580156102e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103079190610551565b815163ffffffff16115b156103c9576040517f4e7444c4000000000000000000000000000000000000000000000000000000008152600160048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690634e7444c4906024016020604051808303816000875af11580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190610551565b505b50505050565b6000806000604084860312156103e457600080fd5b833567ffffffffffffffff808211156103fc57600080fd5b818601915086601f83011261041057600080fd5b81358181111561041f57600080fd5b8760208260071b850101111561043457600080fd5b6020928301989097509590910135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b803563ffffffff8116811461048d57600080fd5b919050565b6000608082840312156104a457600080fd5b6040516080810181811067ffffffffffffffff821117156104ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040526104fa83610479565b815261050860208401610479565b602082015261051960408401610479565b6040820152606083013573ffffffffffffffffffffffffffffffffffffffff8116811461054557600080fd5b60608201529392505050565b60006020828403121561056357600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff838116908316818110156105b6576105b661056a565b039392505050565b6000828210156105d0576105d061056a565b500390565b6000602082840312156105e757600080fd5b6105f082610479565b939250505056fea164736f6c634300080d000a",
    "sourceMap": "78:773:11:-:0;;;111:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;187:16:9;;;78:773:11;;14:306:15;100:6;153:2;141:9;132:7;128:23;124:32;121:52;;;169:1;166;159:12;121:52;195:16;;-1:-1:-1;;;;;240:31:15;;230:42;;220:70;;286:1;283;276:12;220:70;309:5;14:306;-1:-1:-1;;;14:306:15:o;:::-;78:773:11;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80630c73edf414610030575b600080fd5b61004361003e3660046103cf565b610045565b005b60008383838181106100595761005961044a565b90506080020180360381019061006f9190610492565b6040517f503a6982000000000000000000000000000000000000000000000000000000008152600360048201529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063503a698290602401602060405180830381865afa1580156100fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101219190610551565b815163ffffffff161115610200576040517f361401f4000000000000000000000000000000000000000000000000000000008152600360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063361401f4906024016020604051808303816000875af11580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e09190610551565b62ffffff16816000018181516101f69190610599565b63ffffffff169052505b81158015906102515750602081015163ffffffff1684846102226001866105be565b8181106102315761023161044a565b905060800201602001602081019061024991906105d5565b63ffffffff16115b801561031157506040517f54192e41000000000000000000000000000000000000000000000000000000008152600160048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906354192e4190602401602060405180830381865afa1580156102e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103079190610551565b815163ffffffff16115b156103c9576040517f4e7444c4000000000000000000000000000000000000000000000000000000008152600160048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690634e7444c4906024016020604051808303816000875af11580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190610551565b505b50505050565b6000806000604084860312156103e457600080fd5b833567ffffffffffffffff808211156103fc57600080fd5b818601915086601f83011261041057600080fd5b81358181111561041f57600080fd5b8760208260071b850101111561043457600080fd5b6020928301989097509590910135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b803563ffffffff8116811461048d57600080fd5b919050565b6000608082840312156104a457600080fd5b6040516080810181811067ffffffffffffffff821117156104ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040526104fa83610479565b815261050860208401610479565b602082015261051960408401610479565b6040820152606083013573ffffffffffffffffffffffffffffffffffffffff8116811461054557600080fd5b60608201529392505050565b60006020828403121561056357600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff838116908316818110156105b6576105b661056a565b039392505050565b6000828210156105d0576105d061056a565b500390565b6000602082840312156105e757600080fd5b6105f082610479565b939250505056fea164736f6c634300080d000a",
    "sourceMap": "78:773:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:689;;;;;;:::i;:::-;;:::i;:::-;;;266:28;297:7;;305:11;297:20;;;;;;;:::i;:::-;;;;;;266:51;;;;;;;;;;:::i;:::-;413:27;;;;;438:1;413:27;;;2189:25:15;266:51:11;;-1:-1:-1;413:6:11;:24;;;;;2162:18:15;;413:27:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;396:14;;:44;;;392:101;;;467:25;;;;;490:1;467:25;;;2189::15;467:6:11;:22;;;;;2162:18:15;;467:25:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;442:51;;:6;:14;;:51;;;;;;;:::i;:::-;;;;;-1:-1:-1;392:101:11;627:16;;;;;:65;;-1:-1:-1;680:12:11;;;;647:45;;:7;;655:15;669:1;655:11;:15;:::i;:::-;647:24;;;;;;;:::i;:::-;;;;;;:30;;;;;;;;;;:::i;:::-;:45;;;627:65;:108;;;;-1:-1:-1;713:22:11;;;;;733:1;713:22;;;2189:25:15;713:6:11;:19;;;;;2162:18:15;;713:22:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;696:14;;:39;;;627:108;623:220;;;751:18;;;;;767:1;751:18;;;2189:25:15;751:6:11;:15;;;;;2162:18:15;;751::11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;623:220;256:593;160:689;;;:::o;14:717:15:-;137:6;145;153;206:2;194:9;185:7;181:23;177:32;174:52;;;222:1;219;212:12;174:52;262:9;249:23;291:18;332:2;324:6;321:14;318:34;;;348:1;345;338:12;318:34;386:6;375:9;371:22;361:32;;431:7;424:4;420:2;416:13;412:27;402:55;;453:1;450;443:12;402:55;493:2;480:16;519:2;511:6;508:14;505:34;;;535:1;532;525:12;505:34;590:7;583:4;573:6;570:1;566:14;562:2;558:23;554:34;551:47;548:67;;;611:1;608;601:12;548:67;642:4;634:13;;;;666:6;;-1:-1:-1;704:20:15;;;;691:34;;14:717;-1:-1:-1;;;;14:717:15:o;736:184::-;788:77;785:1;778:88;885:4;882:1;875:15;909:4;906:1;899:15;925:163;992:20;;1052:10;1041:22;;1031:33;;1021:61;;1078:1;1075;1068:12;1021:61;925:163;;;:::o;1093:937::-;1178:6;1231:3;1219:9;1210:7;1206:23;1202:33;1199:53;;;1248:1;1245;1238:12;1199:53;1281:2;1275:9;1323:3;1315:6;1311:16;1393:6;1381:10;1378:22;1357:18;1345:10;1342:34;1339:62;1336:242;;;1434:77;1431:1;1424:88;1535:4;1532:1;1525:15;1563:4;1560:1;1553:15;1336:242;1594:2;1587:22;1633:28;1651:9;1633:28;:::i;:::-;1625:6;1618:44;1695:37;1728:2;1717:9;1713:18;1695:37;:::i;:::-;1690:2;1682:6;1678:15;1671:62;1766:37;1799:2;1788:9;1784:18;1766:37;:::i;:::-;1761:2;1753:6;1749:15;1742:62;1854:2;1843:9;1839:18;1826:32;1898:42;1891:5;1887:54;1880:5;1877:65;1867:93;;1956:1;1953;1946:12;1867:93;1988:2;1976:15;;1969:30;1980:6;1093:937;-1:-1:-1;;;1093:937:15:o;2225:184::-;2295:6;2348:2;2336:9;2327:7;2323:23;2319:32;2316:52;;;2364:1;2361;2354:12;2316:52;-1:-1:-1;2387:16:15;;2225:184;-1:-1:-1;2225:184:15:o;2414:::-;2466:77;2463:1;2456:88;2563:4;2560:1;2553:15;2587:4;2584:1;2577:15;2603:221;2642:4;2671:10;2731;;;;2701;;2753:12;;;2750:38;;;2768:18;;:::i;:::-;2805:13;;2603:221;-1:-1:-1;;;2603:221:15:o;2829:125::-;2869:4;2897:1;2894;2891:8;2888:34;;;2902:18;;:::i;:::-;-1:-1:-1;2939:9:15;;2829:125::o;2959:184::-;3017:6;3070:2;3058:9;3049:7;3045:23;3041:32;3038:52;;;3086:1;3083;3076:12;3038:52;3109:28;3127:9;3109:28;:::i;:::-;3099:38;2959:184;-1:-1:-1;;;2959:184:15:o",
    "linkReferences": {},
    "immutableReferences": {
      "22742": [
        {
          "start": 161,
          "length": 32
        },
        {
          "start": 350,
          "length": 32
        },
        {
          "start": 647,
          "length": 32
        },
        {
          "start": 837,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "takeYourTurn((uint32,uint32,uint32,address)[],uint256)": "0c73edf4"
  },
  "ast": {
    "absolutePath": "src/cars/ExampleCar.sol",
    "id": 23447,
    "exportedSymbols": {
      "Car": [
        22763
      ],
      "ExampleCar": [
        23446
      ],
      "Monaco": [
        22736
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:820:11",
    "nodes": [
      {
        "id": 23363,
        "nodeType": "PragmaDirective",
        "src": "32:23:11",
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 23364,
        "nodeType": "ImportDirective",
        "src": "57:19:11",
        "absolutePath": "src/cars/Car.sol",
        "file": "./Car.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23447,
        "sourceUnit": 22764,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 23446,
        "nodeType": "ContractDefinition",
        "src": "78:773:11",
        "nodes": [
          {
            "id": 23376,
            "nodeType": "FunctionDefinition",
            "src": "111:43:11",
            "body": {
              "id": 23375,
              "nodeType": "Block",
              "src": "152:2:11",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 23372,
                    "name": "_monaco",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23369,
                    "src": "143:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Monaco_$22736",
                      "typeString": "contract Monaco"
                    }
                  }
                ],
                "id": 23373,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23371,
                  "name": "Car",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22763,
                  "src": "139:3:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "139:12:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 23370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23369,
                  "mutability": "mutable",
                  "name": "_monaco",
                  "nameLocation": "130:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 23376,
                  "src": "123:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Monaco_$22736",
                    "typeString": "contract Monaco"
                  },
                  "typeName": {
                    "id": 23368,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23367,
                      "name": "Monaco",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22736,
                      "src": "123:6:11"
                    },
                    "referencedDeclaration": 22736,
                    "src": "123:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Monaco_$22736",
                      "typeString": "contract Monaco"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "122:16:11"
            },
            "returnParameters": {
              "id": 23374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "152:0:11"
            },
            "scope": 23446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23445,
            "nodeType": "FunctionDefinition",
            "src": "160:689:11",
            "body": {
              "id": 23444,
              "nodeType": "Block",
              "src": "256:593:11",
              "statements": [
                {
                  "assignments": [
                    23390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23390,
                      "mutability": "mutable",
                      "name": "ourCar",
                      "nameLocation": "288:6:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 23444,
                      "src": "266:28:11",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                        "typeString": "struct Monaco.CarData"
                      },
                      "typeName": {
                        "id": 23389,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23388,
                          "name": "Monaco.CarData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 21892,
                          "src": "266:14:11"
                        },
                        "referencedDeclaration": 21892,
                        "src": "266:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CarData_$21892_storage_ptr",
                          "typeString": "struct Monaco.CarData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23394,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23391,
                      "name": "allCars",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23380,
                      "src": "297:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_CarData_$21892_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct Monaco.CarData calldata[] calldata"
                      }
                    },
                    "id": 23393,
                    "indexExpression": {
                      "id": 23392,
                      "name": "ourCarIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23382,
                      "src": "305:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "297:20:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CarData_$21892_calldata_ptr",
                      "typeString": "struct Monaco.CarData calldata"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "266:51:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 23395,
                        "name": "ourCar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23390,
                        "src": "396:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                          "typeString": "struct Monaco.CarData memory"
                        }
                      },
                      "id": 23396,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21884,
                      "src": "396:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 23399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "438:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "expression": {
                          "id": 23397,
                          "name": "monaco",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22742,
                          "src": "413:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Monaco_$22736",
                            "typeString": "contract Monaco"
                          }
                        },
                        "id": 23398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getAccelerateCost",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 22435,
                        "src": "413:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 23400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "413:27:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "396:44:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23414,
                  "nodeType": "IfStatement",
                  "src": "392:101:11",
                  "trueBody": {
                    "expression": {
                      "id": 23412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 23402,
                          "name": "ourCar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23390,
                          "src": "442:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                            "typeString": "struct Monaco.CarData memory"
                          }
                        },
                        "id": 23404,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21884,
                        "src": "442:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "-=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "33",
                                "id": 23409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "490:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                }
                              ],
                              "expression": {
                                "id": 23407,
                                "name": "monaco",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22742,
                                "src": "467:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Monaco_$22736",
                                  "typeString": "contract Monaco"
                                }
                              },
                              "id": 23408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyAcceleration",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22247,
                              "src": "467:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) external returns (uint256)"
                              }
                            },
                            "id": 23410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "467:25:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 23406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "460:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint24_$",
                            "typeString": "type(uint24)"
                          },
                          "typeName": {
                            "id": 23405,
                            "name": "uint24",
                            "nodeType": "ElementaryTypeName",
                            "src": "460:6:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "460:33:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "src": "442:51:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "id": 23413,
                    "nodeType": "ExpressionStatement",
                    "src": "442:51:11"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 23435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 23427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23415,
                          "name": "ourCarIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23382,
                          "src": "627:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "642:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "627:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 23426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 23418,
                              "name": "allCars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23380,
                              "src": "647:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CarData_$21892_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct Monaco.CarData calldata[] calldata"
                              }
                            },
                            "id": 23422,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 23421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 23419,
                                "name": "ourCarIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23382,
                                "src": "655:11:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 23420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "669:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "655:15:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "647:24:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CarData_$21892_calldata_ptr",
                              "typeString": "struct Monaco.CarData calldata"
                            }
                          },
                          "id": 23423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "speed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21886,
                          "src": "647:30:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 23424,
                            "name": "ourCar",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23390,
                            "src": "680:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                              "typeString": "struct Monaco.CarData memory"
                            }
                          },
                          "id": 23425,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "speed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21886,
                          "src": "680:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "647:45:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "627:65:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 23434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 23428,
                          "name": "ourCar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23390,
                          "src": "696:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CarData_$21892_memory_ptr",
                            "typeString": "struct Monaco.CarData memory"
                          }
                        },
                        "id": 23429,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21884,
                        "src": "696:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 23432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "733:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 23430,
                            "name": "monaco",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22742,
                            "src": "713:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Monaco_$22736",
                              "typeString": "contract Monaco"
                            }
                          },
                          "id": 23431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getShellCost",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22471,
                          "src": "713:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 23433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "713:22:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "696:39:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "627:108:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23443,
                  "nodeType": "IfStatement",
                  "src": "623:220:11",
                  "trueBody": {
                    "id": 23442,
                    "nodeType": "Block",
                    "src": "737:106:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 23439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "767:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "id": 23436,
                              "name": "monaco",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22742,
                              "src": "751:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Monaco_$22736",
                                "typeString": "contract Monaco"
                              }
                            },
                            "id": 23438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyShell",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22399,
                            "src": "751:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) external returns (uint256)"
                            }
                          },
                          "id": 23440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "751:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 23441,
                        "nodeType": "ExpressionStatement",
                        "src": "751:18:11"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              22762
            ],
            "functionSelector": "0c73edf4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "takeYourTurn",
            "nameLocation": "169:12:11",
            "overrides": {
              "id": 23384,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "247:8:11"
            },
            "parameters": {
              "id": 23383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23380,
                  "mutability": "mutable",
                  "name": "allCars",
                  "nameLocation": "208:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 23445,
                  "src": "182:33:11",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CarData_$21892_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct Monaco.CarData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23378,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23377,
                        "name": "Monaco.CarData",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 21892,
                        "src": "182:14:11"
                      },
                      "referencedDeclaration": 21892,
                      "src": "182:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CarData_$21892_storage_ptr",
                        "typeString": "struct Monaco.CarData"
                      }
                    },
                    "id": 23379,
                    "nodeType": "ArrayTypeName",
                    "src": "182:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CarData_$21892_storage_$dyn_storage_ptr",
                      "typeString": "struct Monaco.CarData[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23382,
                  "mutability": "mutable",
                  "name": "ourCarIndex",
                  "nameLocation": "225:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 23445,
                  "src": "217:19:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "181:56:11"
            },
            "returnParameters": {
              "id": 23385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:0:11"
            },
            "scope": 23446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23365,
              "name": "Car",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22763,
              "src": "101:3:11"
            },
            "id": 23366,
            "nodeType": "InheritanceSpecifier",
            "src": "101:3:11"
          }
        ],
        "canonicalName": "ExampleCar",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23446,
          22763
        ],
        "name": "ExampleCar",
        "nameLocation": "87:10:11",
        "scope": 23447,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 11
}