{
  "compiler": {
    "version": "0.8.13+commit.abaa5c0e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "turn",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "contract Car",
            "name": "car",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "cost",
            "type": "uint256"
          }
        ],
        "name": "Accelerated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "turn",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "contract Car",
            "name": "winner",
            "type": "address"
          }
        ],
        "name": "Dub",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "turn",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "contract Car",
            "name": "car",
            "type": "address"
          }
        ],
        "name": "Punished",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "turn",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "contract Car",
            "name": "car",
            "type": "address"
          }
        ],
        "name": "Registered",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "turn",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "contract Car",
            "name": "car",
            "type": "address"
          }
        ],
        "name": "Rewarded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "turn",
            "type": "uint256"
          },
          {
            "indexed": true,
            "internalType": "contract Car",
            "name": "smoker",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "contract Car",
            "name": "smoked",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "cost",
            "type": "uint256"
          }
        ],
        "name": "Shelled",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "turn",
            "type": "uint256"
          },
          {
            "components": [
              {
                "internalType": "uint32",
                "name": "balance",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "speed",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "y",
                "type": "uint32"
              },
              {
                "internalType": "contract Car",
                "name": "car",
                "type": "address"
              }
            ],
            "indexed": false,
            "internalType": "struct Monaco.CarData[]",
            "name": "cars",
            "type": "tuple[]"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "acceleratePrice",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "shellPrice",
            "type": "uint256"
          }
        ],
        "name": "TurnCompleted",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "buyAcceleration",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "cost",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "buyShell",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "cost",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "cars",
        "outputs": [
          {
            "internalType": "contract Car",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "currentCar",
        "outputs": [
          {
            "internalType": "contract Car",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "entropy",
        "outputs": [
          {
            "internalType": "uint72",
            "name": "",
            "type": "uint72"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "getAccelerateCost",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "sum",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "enum Monaco.ActionType",
            "name": "",
            "type": "uint8"
          }
        ],
        "name": "getActionsSold",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getAllCarData",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint32",
                "name": "balance",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "speed",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "y",
                "type": "uint32"
              },
              {
                "internalType": "contract Car",
                "name": "car",
                "type": "address"
              }
            ],
            "internalType": "struct Monaco.CarData[]",
            "name": "results",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract Car",
            "name": "carToFind",
            "type": "address"
          }
        ],
        "name": "getAllCarDataAndFindCar",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint32",
                "name": "balance",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "speed",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "y",
                "type": "uint32"
              },
              {
                "internalType": "contract Car",
                "name": "car",
                "type": "address"
              }
            ],
            "internalType": "struct Monaco.CarData[]",
            "name": "results",
            "type": "tuple[]"
          },
          {
            "internalType": "uint256",
            "name": "foundCarIndex",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract Car",
            "name": "",
            "type": "address"
          }
        ],
        "name": "getCarData",
        "outputs": [
          {
            "internalType": "uint32",
            "name": "balance",
            "type": "uint32"
          },
          {
            "internalType": "uint32",
            "name": "speed",
            "type": "uint32"
          },
          {
            "internalType": "uint32",
            "name": "y",
            "type": "uint32"
          },
          {
            "internalType": "contract Car",
            "name": "car",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "getShellCost",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "sum",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "turnsToPlay",
            "type": "uint256"
          }
        ],
        "name": "play",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract Car",
            "name": "car",
            "type": "address"
          }
        ],
        "name": "register",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "state",
        "outputs": [
          {
            "internalType": "enum Monaco.State",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "turns",
        "outputs": [
          {
            "internalType": "uint16",
            "name": "",
            "type": "uint16"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "author": "transmissions11 <t11s@paradigm.xyz>Bobby Abbott <bobby@paradigm.xyz>Sina Sabet <sina@paradigm.xyz>",
      "details": "Note: While 0xMonaco was originally written to be played as part of the Paradigm CTF, it is not intended to have hidden vulnerabilities.",
      "kind": "dev",
      "methods": {},
      "title": "0xMonaco: On-Chain Racing Game",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "src/Monaco.sol": "Monaco"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "none"
    },
    "optimizer": {
      "enabled": true,
      "runs": 1000000
    },
    "remappings": [
      ":ds-test/=lib/solmate/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":solmate/=lib/solmate/src/"
    ]
  },
  "sources": {
    "lib/solmate/src/utils/SafeCastLib.sol": {
      "keccak256": "0x636e0f18c1b287c9342e14660a914b37a927d9f64d6c29e27016784979ce8d59",
      "license": "AGPL-3.0-only",
      "urls": [
        "bzz-raw://7a188290b5ba3c17099bfca1405de70098ee66b0f3027f137de9556ec9300e0e",
        "dweb:/ipfs/QmeXGCTzCvRvS6GydDTmKD2kfQHdBx1Ffk52CdyN6iqXvd"
      ]
    },
    "src/Monaco.sol": {
      "keccak256": "0xdcb8cc5694f59418fb80ec7d00c499d475219229fb926825c9cd0974707aaf7e",
      "license": "MIT",
      "urls": [
        "bzz-raw://a1fb189450a57f87ae2b6343756ec1b921295b19c0fbe91c26645ce1ee2a87b6",
        "dweb:/ipfs/QmWpJo5NtbGqkrYLjVNj1PnQzfnZHA9tLy4XqUHAnyQmdA"
      ]
    },
    "src/cars/Car.sol": {
      "keccak256": "0x050db21da4a6df3dcb73cfe8bb537fee1e9d5fbd622854de4da5f753b4a6f7b5",
      "license": "MIT",
      "urls": [
        "bzz-raw://969769018e1aee135dd20db4bd108af9813dda965a198533acc890cd0960c931",
        "dweb:/ipfs/QmenJC5iEZWS9wxoNvwGBGVem4E9DMbNayAZtbpwnTy4av"
      ]
    },
    "src/utils/SignedWadMath.sol": {
      "keccak256": "0xceb33c70492dbf5590c9840b709b32b8284d687ac283a932f0622db28c3bfe72",
      "license": "MIT",
      "urls": [
        "bzz-raw://319e4b99628a09e6eb1d6cfad5a549bd4b862354129dedf39118461889eccd77",
        "dweb:/ipfs/Qmbu2RJDAckizshkwr78xGu1nKGKhKxm2CAkayLcxybsm5"
      ]
    }
  },
  "version": 1
}